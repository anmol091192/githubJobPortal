[{"/Users/anmolkhandekar/Documents/Projects/githubjobportal/src/index.js":"1","/Users/anmolkhandekar/Documents/Projects/githubjobportal/src/App.js":"2","/Users/anmolkhandekar/Documents/Projects/githubjobportal/src/pages/Home.js":"3","/Users/anmolkhandekar/Documents/Projects/githubjobportal/src/components/Job.js":"4","/Users/anmolkhandekar/Documents/Projects/githubjobportal/src/components/JobPagination.js":"5","/Users/anmolkhandekar/Documents/Projects/githubjobportal/src/components/SearchForm.js":"6","/Users/anmolkhandekar/Documents/Projects/githubjobportal/src/pages/ApplyJob.js":"7","/Users/anmolkhandekar/Documents/Projects/githubjobportal/src/hooks/useGetJobs.js":"8","/Users/anmolkhandekar/Documents/Projects/githubjobportal/src/context/LocationContext.js":"9"},{"size":147,"mtime":1608009155362,"results":"10","hashOfConfig":"11"},{"size":648,"mtime":1608185179179,"results":"12","hashOfConfig":"11"},{"size":1361,"mtime":1608185049636,"results":"13","hashOfConfig":"11"},{"size":1697,"mtime":1608185230995,"results":"14","hashOfConfig":"11"},{"size":937,"mtime":1608112147323,"results":"15","hashOfConfig":"11"},{"size":3168,"mtime":1608172444681,"results":"16","hashOfConfig":"11"},{"size":2209,"mtime":1608169637578,"results":"17","hashOfConfig":"11"},{"size":1732,"mtime":1608185029123,"results":"18","hashOfConfig":"11"},{"size":607,"mtime":1608184971305,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"8owrwd",{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/anmolkhandekar/Documents/Projects/githubjobportal/src/index.js",[],["42","43"],"/Users/anmolkhandekar/Documents/Projects/githubjobportal/src/App.js",["44","45","46"],"/Users/anmolkhandekar/Documents/Projects/githubjobportal/src/pages/Home.js",["47"],"/Users/anmolkhandekar/Documents/Projects/githubjobportal/src/components/Job.js",["48","49","50","51","52","53","54"],"/Users/anmolkhandekar/Documents/Projects/githubjobportal/src/components/JobPagination.js",["55"],"import React from 'react'\nimport { Pagination } from 'react-bootstrap';\nimport style from '../style.css';\n\nexport default function JobPagination({ page, setPage, hasNextPage }) {\n    function adjustPage(amount) {\n        setPage(prevPage => prevPage + amount);\n    }\n\n    return (\n        <Pagination className=\"paginationWrapper\">\n            { page !== 1 && <Pagination.Prev onClick={() => adjustPage(-1)} />}\n            { page !== 1 && <Pagination.Item onClick={() => setPage(1)}>1</Pagination.Item>}\n            { page > 2 && <Pagination.Ellipsis />}\n            { page > 2 && <Pagination.Item onClick={() => adjustPage(-1)}>{page - 1}</Pagination.Item>}\n            <Pagination.Item active>{page}</Pagination.Item>\n            { hasNextPage && <Pagination.Item onClick={() => adjustPage(1)}>{page + 1}</Pagination.Item>}\n            { hasNextPage && <Pagination.Next onClick={() => adjustPage(1)} />}\n        </Pagination>\n    )\n}\n","/Users/anmolkhandekar/Documents/Projects/githubjobportal/src/components/SearchForm.js",["56"],"import React, { useState } from 'react';\nimport { Form, Col, Button, InputGroup } from 'react-bootstrap';\nimport style from '../style.css';\n\nexport default function SearchForm({\n    setPage,\n    setParams,\n}) {\n    const [description, setDescription] = useState('');\n    const [isFullTime, setIsFullTime] = useState(false);\n    const [location, setLocation] = useState('');\n\n    const handleSearch = (event) => {\n        setPage(1);\n        setParams({\n            description,\n            full_time: isFullTime,\n            location,\n        });\n        event.preventDefault();\n    }\n\n    return (\n        <Form className=\"mb-4 formWrapper\">\n            <Form.Row className=\"align-items-center\">\n                <Col xs=\"auto\">\n                    <Form.Label htmlFor=\"inlineFormInputGroupDescription\" srOnly>\n                        Description\n                    </Form.Label>\n                    <InputGroup className=\"mb-1\">\n                        <InputGroup.Prepend>\n                        <InputGroup.Text>@</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <Form.Control \n                            id=\"inlineFormInputGroupDescription\" \n                            name=\"description\" \n                            onChange={(event) => setDescription(event.target.value)}\n                            placeholder=\"Description\"\n                            type=\"text\"\n                            value={description} \n                        />\n                    </InputGroup>\n                </Col>\n                <Col xs=\"auto\">\n                    <Form.Label htmlFor=\"inlineFormInputGroupLocation\" srOnly>\n                        Location\n                    </Form.Label>\n                    <InputGroup className=\"mb-1\">\n                        <InputGroup.Prepend>\n                        <InputGroup.Text>@</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <Form.Control \n                            id=\"inlineFormInputGroupLocation\" \n                            name=\"location\"\n                            onChange={(event) => setLocation(event.target.value)}\n                            placeholder=\"Location\"\n                            type=\"text\"\n                            value={location}\n                        />\n                    </InputGroup>\n                </Col>\n                <Col xs=\"auto\">\n                    <Form.Check\n                        className=\"mb-1\"\n                        id=\"full-time\"\n                        label=\"Full Time Only\"\n                        name=\"full_time\"\n                        onChange={() => setIsFullTime(!isFullTime)} \n                        value={isFullTime}    \n                        type=\"checkbox\"\n                    />\n                </Col>\n                <Col xs=\"auto\">\n                    <Button\n                        type=\"submit\"\n                        className=\"mb-1\"\n                        onClick={(event) => handleSearch(event)}\n                    >\n                        Search\n                    </Button>\n                </Col>\n            </Form.Row>\n        </Form>\n    )\n}\n","/Users/anmolkhandekar/Documents/Projects/githubjobportal/src/pages/ApplyJob.js",["57","58"],"import React from 'react';\nimport { useLocation } from 'react-router';\nimport { Container, Card, Row, Col, Image, Button } from 'react-bootstrap';\nimport ReactMarkdown from 'react-markdown';\nimport style from '../style.css';\n\nexport default function ApplyJob() {\n    const location = useLocation();\n    console.log(location);\n\n    return (\n        <>\n            <div className=\"container-fluid header\">\n                <h1 className=\"mb-4\">devjobs</h1>\n            </div>\n            <Container className=\"my-4\">\n                <Row className=\"align-items-center companyName\">\n                    <Col xs={4} md={3}>\n                        <Image width=\"100\" height=\"80\" src={location.state.company_logo} rounded />\n                    </Col>\n                    <Col xs={4} md={6}>\n                        {location.state.company}\n                    </Col>\n                    <Col xs={4} md={3}>\n                        <Button variant=\"primary\" href={location.state.company_url}>Company Site</Button>\n                    </Col>\n                </Row>\n                <Row className=\"companyDescription justify-content-md-center\">\n                    <Row className=\"jobTitle align-items-center\">\n                        <Col xs={8} md={9} lg={8}>\n                            {location.state.type}\n                            <h3>{location.state.title}</h3>\n                            {location.state.location}\n                        </Col>\n                        <Col xs={4} md={3} lg={4}>\n                            <Button variant=\"primary\" href={location.state.url}>Apply Now</Button>\n                        </Col>\n                    </Row>\n                    <Row className=\"jobDescription\">\n                        <Col>\n                            <ReactMarkdown source={location.state.description} />\n                        </Col>\n                    </Row>\n                </Row>\n                <Row className=\"jobApply\">\n                    <Col className=\"mb-2\">\n                        <h3>How to Apply</h3>\n                        <ReactMarkdown source={location.state.how_to_apply} />\n                    </Col>\n                </Row>\n            </Container>\n        </>\n    )\n}\n","/Users/anmolkhandekar/Documents/Projects/githubjobportal/src/hooks/useGetJobs.js",[],"/Users/anmolkhandekar/Documents/Projects/githubjobportal/src/context/LocationContext.js",["59","60"],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":26},{"ruleId":"65","severity":1,"message":"69","line":1,"column":28,"nodeType":"67","messageId":"68","endLine":1,"endColumn":36},{"ruleId":"65","severity":1,"message":"70","line":5,"column":10,"nodeType":"67","messageId":"68","endLine":5,"endColumn":26},{"ruleId":"65","severity":1,"message":"71","line":7,"column":8,"nodeType":"67","messageId":"68","endLine":7,"endColumn":13},{"ruleId":"65","severity":1,"message":"72","line":2,"column":23,"nodeType":"67","messageId":"68","endLine":2,"endColumn":31},{"ruleId":"65","severity":1,"message":"73","line":3,"column":8,"nodeType":"67","messageId":"68","endLine":3,"endColumn":21},{"ruleId":"65","severity":1,"message":"74","line":4,"column":22,"nodeType":"67","messageId":"68","endLine":4,"endColumn":26},{"ruleId":"65","severity":1,"message":"71","line":5,"column":8,"nodeType":"67","messageId":"68","endLine":5,"endColumn":13},{"ruleId":"65","severity":1,"message":"75","line":8,"column":13,"nodeType":"67","messageId":"68","endLine":8,"endColumn":17},{"ruleId":"65","severity":1,"message":"76","line":8,"column":19,"nodeType":"67","messageId":"68","endLine":8,"endColumn":26},{"ruleId":"65","severity":1,"message":"77","line":9,"column":19,"nodeType":"67","messageId":"68","endLine":9,"endColumn":27},{"ruleId":"65","severity":1,"message":"71","line":3,"column":8,"nodeType":"67","messageId":"68","endLine":3,"endColumn":13},{"ruleId":"65","severity":1,"message":"71","line":3,"column":8,"nodeType":"67","messageId":"68","endLine":3,"endColumn":13},{"ruleId":"65","severity":1,"message":"78","line":3,"column":21,"nodeType":"67","messageId":"68","endLine":3,"endColumn":25},{"ruleId":"65","severity":1,"message":"71","line":5,"column":8,"nodeType":"67","messageId":"68","endLine":5,"endColumn":13},{"ruleId":"65","severity":1,"message":"69","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":25},{"ruleId":"65","severity":1,"message":"66","line":1,"column":27,"nodeType":"67","messageId":"68","endLine":1,"endColumn":36},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'LocationProvider' is defined but never used.","'style' is defined but never used.","'Collapse' is defined but never used.","'ReactMarkdown' is defined but never used.","'Link' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'setState' is assigned a value but never used.","'Card' is defined but never used.","no-global-assign","no-unsafe-negation"]