[{"/Users/anmolkhandekar/Documents/Projects/githubjobportal/src/index.js":"1","/Users/anmolkhandekar/Documents/Projects/githubjobportal/src/App.js":"2","/Users/anmolkhandekar/Documents/Projects/githubjobportal/src/pages/Home.js":"3","/Users/anmolkhandekar/Documents/Projects/githubjobportal/src/components/Job.js":"4","/Users/anmolkhandekar/Documents/Projects/githubjobportal/src/components/JobPagination.js":"5","/Users/anmolkhandekar/Documents/Projects/githubjobportal/src/components/SearchForm.js":"6","/Users/anmolkhandekar/Documents/Projects/githubjobportal/src/pages/ApplyJob.js":"7","/Users/anmolkhandekar/Documents/Projects/githubjobportal/src/hooks/useGetJobs.js":"8","/Users/anmolkhandekar/Documents/Projects/githubjobportal/src/context/LocationContext.js":"9","/Users/anmolkhandekar/Documents/Projects/githubjobportal/src/components/Filter.js":"10","/Users/anmolkhandekar/Documents/Projects/githubjobportal/src/components/NavBar.js":"11","/Users/anmolkhandekar/Documents/Projects/githubjobportal/src/global.js":"12","/Users/anmolkhandekar/Documents/Projects/githubjobportal/src/theme.js":"13"},{"size":266,"mtime":1611536586004,"results":"14","hashOfConfig":"15"},{"size":1121,"mtime":1612241245888,"results":"16","hashOfConfig":"15"},{"size":1330,"mtime":1610596128914,"results":"17","hashOfConfig":"15"},{"size":1548,"mtime":1610598227731,"results":"18","hashOfConfig":"15"},{"size":903,"mtime":1610598233982,"results":"19","hashOfConfig":"15"},{"size":3241,"mtime":1610598280309,"results":"20","hashOfConfig":"15"},{"size":2116,"mtime":1610596095020,"results":"21","hashOfConfig":"15"},{"size":1844,"mtime":1609817338326,"results":"22","hashOfConfig":"15"},{"size":1076,"mtime":1612128161877,"results":"23","hashOfConfig":"15"},{"size":855,"mtime":1608234100460,"results":"24","hashOfConfig":"15"},{"size":653,"mtime":1612236515193,"results":"25","hashOfConfig":"15"},{"size":768,"mtime":1612242907146,"results":"26","hashOfConfig":"15"},{"size":352,"mtime":1612242895944,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"8owrwd",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/anmolkhandekar/Documents/Projects/githubjobportal/src/index.js",[],["58","59"],"/Users/anmolkhandekar/Documents/Projects/githubjobportal/src/App.js",[],"/Users/anmolkhandekar/Documents/Projects/githubjobportal/src/pages/Home.js",["60"],"import React, { useState } from 'react';\nimport useGetJobs from '../hooks/useGetJobs';\nimport { Container } from 'react-bootstrap';\nimport Job from '../components/Job';\nimport JobPagination from '../components/JobPagination';\nimport SearchForm from '../components/SearchForm';\nimport NavBar from '../components/NavBar';\nimport style from '../style.css';\n\nfunction Home() {\n\n    const [params, setParams] = useState({});\n    const [page, setPage] = useState(1);\n    const { jobs, loading, error, hasNextPage } = useGetJobs(params, page);\n    console.log(params);\n\n    return (\n        <>\n            <NavBar />\n            <Container className=\"my-4\">\n                <SearchForm\n                    setPage={setPage}\n                    setParams={setParams}\n                />\n                <JobPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\n                {loading && <h1>Loading...</h1>}\n                {error && <h1>Error. Try Refreshing</h1>}\n                <div className=\"cardsContainer\">\n                    {jobs.map(job => {\n                        return <Job key={job.id} job={job} />\n                    })}\n                </div>\n                <JobPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\n            </Container>\n        </>\n    );\n}\n\nexport default Home;\n","/Users/anmolkhandekar/Documents/Projects/githubjobportal/src/components/Job.js",[],"/Users/anmolkhandekar/Documents/Projects/githubjobportal/src/components/JobPagination.js",[],"/Users/anmolkhandekar/Documents/Projects/githubjobportal/src/components/SearchForm.js",["61"],"import React, { useState } from 'react';\nimport { Form, Col, Button, InputGroup } from 'react-bootstrap';\nimport Filter from './Filter';\n\nexport default function SearchForm({\n    setPage,\n    setParams,\n}) {\n    const [description, setDescription] = useState('');\n    const [isFullTime, setIsFullTime] = useState(false);\n    const [location, setLocation] = useState('');\n\n    const handleSearch = (event) => {\n        setPage(1);\n        setParams({\n            description,\n            full_time: isFullTime,\n            location,\n            \n        });\n        event.preventDefault();\n    }\n\n    return (\n        <Form className=\"mb-4 formWrapper\">\n            <Form.Row className=\"align-items-center justify-content-between\">\n                <Col xs=\"auto\">\n                    <Form.Label htmlFor=\"inlineFormInputGroupDescription\" srOnly>\n                        Description\n                    </Form.Label>\n                    <InputGroup className=\"mb-1\">\n                        <InputGroup.Prepend>\n                        <InputGroup.Text>@</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <Form.Control \n                            id=\"inlineFormInputGroupDescription\" \n                            name=\"description\" \n                            onChange={(event) => setDescription(event.target.value)}\n                            placeholder=\"Description\"\n                            type=\"text\"\n                            value={description} \n                        />\n                    </InputGroup>\n                </Col>\n                <Col xs=\"auto\">\n                    <Form.Label htmlFor=\"inlineFormInputGroupLocation\" srOnly>\n                        Location\n                    </Form.Label>\n                    <InputGroup className=\"mb-1\">\n                        <InputGroup.Prepend>\n                        <InputGroup.Text>@</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <Form.Control \n                            id=\"inlineFormInputGroupLocation\" \n                            name=\"location\"\n                            onChange={(event) => setLocation(event.target.value)}\n                            placeholder=\"Location\"\n                            type=\"text\"\n                            value={location}\n                        />\n                    </InputGroup>\n                </Col>\n                <Col xs=\"auto\">\n                    {/* <Form.Check\n                        className=\"mb-1\"\n                        id=\"full-time\"\n                        label=\"Full Time Only\"\n                        name=\"full_time\"\n                        onChange={() => setIsFullTime(!isFullTime)} \n                        value={isFullTime}    \n                        type=\"checkbox\"\n                    /> */}\n                    <Filter />\n                </Col>\n                <Col xs=\"auto\">\n                    <Button\n                        type=\"submit\"\n                        className=\"mb-1\"\n                        onClick={(event) => handleSearch(event)}\n                    >\n                        Search\n                    </Button>\n                </Col>\n            </Form.Row>\n        </Form>\n    )\n}\n","/Users/anmolkhandekar/Documents/Projects/githubjobportal/src/pages/ApplyJob.js",["62","63"],"import React from 'react';\nimport { useLocation } from 'react-router';\nimport { Container, Card, Row, Col, Image, Button } from 'react-bootstrap';\nimport ReactMarkdown from 'react-markdown';\nimport NavBar from '../components/NavBar';\nimport style from '../style.css';\n\nexport default function ApplyJob() {\n    const payload = useLocation();\n\n    return (\n        <>\n            <NavBar />\n            <Container className=\"my-4\">\n                <Row className=\"align-items-center companyName\">\n                    <Col xs={0} md={3}>\n                        <Image width=\"100\" height=\"80\" src={payload.state.company_logo} rounded />\n                    </Col>\n                    <Col xs={6} md={6}>\n                        {payload.state.company}\n                    </Col>\n                    <Col xs={6} md={3}>\n                        <Button variant=\"primary\" href={payload.state.company_url}>Company Site</Button>\n                    </Col>\n                </Row>\n                <Row className=\"companyDescription justify-content-md-center\">\n                    <Row className=\"jobTitle align-items-center\">\n                        <Col xs={8} md={9} lg={8}>\n                            {payload.state.type}\n                            <h3>{payload.state.title}</h3>\n                            {payload.state.location}\n                        </Col>\n                        <Col xs={4} md={3} lg={4}>\n                            <Button variant=\"primary\" href={payload.state.url}>Apply Now</Button>\n                        </Col>\n                    </Row>\n                    <Row className=\"jobDescription\">\n                        <Col>\n                            <ReactMarkdown source={payload.state.description} />\n                        </Col>\n                    </Row>\n                </Row>\n                <Row className=\"jobApply\">\n                    <Col className=\"mb-2\">\n                        <h3>How to Apply</h3>\n                        <ReactMarkdown source={payload.state.how_to_apply} />\n                    </Col>\n                </Row>\n            </Container>\n        </>\n    )\n}\n","/Users/anmolkhandekar/Documents/Projects/githubjobportal/src/hooks/useGetJobs.js",[],"/Users/anmolkhandekar/Documents/Projects/githubjobportal/src/context/LocationContext.js",[],"/Users/anmolkhandekar/Documents/Projects/githubjobportal/src/components/Filter.js",[],"/Users/anmolkhandekar/Documents/Projects/githubjobportal/src/components/NavBar.js",[],"/Users/anmolkhandekar/Documents/Projects/githubjobportal/src/global.js",[],"/Users/anmolkhandekar/Documents/Projects/githubjobportal/src/theme.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":8,"column":8,"nodeType":"70","messageId":"71","endLine":8,"endColumn":13},{"ruleId":"68","severity":1,"message":"72","line":10,"column":24,"nodeType":"70","messageId":"71","endLine":10,"endColumn":37},{"ruleId":"68","severity":1,"message":"73","line":3,"column":21,"nodeType":"70","messageId":"71","endLine":3,"endColumn":25},{"ruleId":"68","severity":1,"message":"69","line":6,"column":8,"nodeType":"70","messageId":"71","endLine":6,"endColumn":13},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'style' is defined but never used.","Identifier","unusedVar","'setIsFullTime' is assigned a value but never used.","'Card' is defined but never used.","no-global-assign","no-unsafe-negation"]